!function(t){var e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(o,i,function(e){return t[e]}.bind(null,i));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){n(2),t.exports=n(1)},function(t,e,n){"use strict";n.r(e),e.default=n.p+"assets/styles/app.min.css"},function(t,e,n){"use strict";function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}n.r(e);var i=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.posY=window.scrollY,this.frame,this.activeSection=0,this.oldSection=0,this.black="#2B2B2B",this.blackAlpha="#2B2B2B85",this.white="#F7F7F7",this.contentElements=document.querySelectorAll(".frame-content"),this.contentSections=document.querySelectorAll(".frame-section"),this.startY=this.contentSections[0].offsetTop,this.contentLastSection=this.contentSections[this.contentSections.length-1].querySelectorAll(".frame-content");var e=0;this.contentLastSection.forEach((function(t){e+=t.clientHeight})),this.endY=this.contentSections[this.contentSections.length-1].offsetTop+this.contentSections[this.contentSections.length-1].offsetHeight-e}var e,n,i;return e=t,(n=[{key:"init",value:function(){this.contentElements.forEach((function(t){t.classList.add("frame-content--hidden")})),this.frame=this.createHTMLNodeFrame(),this.isIpad()||(this.endY-=this.frame.offsetHeight),this.onScroll(),window.addEventListener("scroll",this.onScroll.bind(this)),window.addEventListener("resize",this.onResize.bind(this))}},{key:"setPosY",value:function(t){this.posY=t}},{key:"createHTMLNodeFrame",value:function(){var t=document.createElement("div");t.classList.add("frame");var e=document.createElement("div");return e.classList.add("frame__bg"),t.appendChild(e),t.innerHTML+='<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 393 680" class="svg-responsive frame__svg">\n        <g fill="none" fill-rule="evenodd" transform="translate(0 1)"><path fill="#2B2B2B" d="M353 0c22.09139 0 40 17.90861 40 40v598c0 22.09139-17.90861 40-40 40H40c-22.09139 0-40-17.90861-40-40V40C0 17.90861 17.90861 0 40 0h313zm-13 18H54c-22.09139 0-40 17.90861-40 40v550c0 22.09139 17.90861 40 40 40h286c22.09139 0 40-17.90861 40-40V58c0-22.09139-17.90861-40-40-40z"/><path fill="#F7F7F7" fill-opacity=".25" d="M14 608c0 22.09139 17.90861 40 40 40h286c22.09139 0 40-17.90861 40-40v12c0 22.09139-17.90861 40-40 40H54c-22.09139 0-40-17.90861-40-40z"/><rect width="366" height="630" x="14" y="18" stroke="#000" stroke-width="3" rx="40"/></g>\n    </svg>',document.querySelector("main").appendChild(t),t}},{key:"isIpad",value:function(){return!(!/iPad/.test(navigator.userAgent)||window.MSStream)}},{key:"onScroll",value:function(){var t=this;this.setPosY(window.scrollY+window.innerHeight/2),this.posY>=this.startY&&this.posY<=this.endY?(this.frame.classList.add("frame--fixed"),document.body.classList.add("frame-active"),window.outerWidth<1024&&document.documentElement.style.setProperty("--color-text",this.white),this.contentSections.forEach((function(e,n){t.posY>=e.offsetTop&&t.posY<=e.offsetTop+e.offsetHeight&&(t.activeSection=n)})),this.activeSection<this.contentElements.length&&(this.oldSection!==this.activeSection&&(this.contentElements[this.oldSection].classList.remove("frame-content--active"),this.oldSection=this.activeSection),this.contentElements[this.activeSection].classList.add("frame-content--active"))):(document.body.classList.remove("frame-active"),this.contentElements[this.oldSection].classList.remove("frame-content--active"),this.frame.classList.remove("frame--fixed"),document.documentElement.style.setProperty("--color-text",this.black))}},{key:"onResize",value:function(){this.startY=this.contentSections[0].offsetTop,this.contentLastSection=this.contentSections[this.contentSections.length-1].querySelectorAll(".frame-content");var t=0;this.contentLastSection.forEach((function(e){t+=e.clientHeight})),this.endY=this.contentSections[this.contentSections.length-1].offsetTop+this.contentSections[this.contentSections.length-1].offsetHeight-t}}])&&o(e.prototype,n),i&&o(e,i),t}();function s(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var c=new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,o;return e=t,(n=[{key:"init",value:function(){document.body.classList.add("loader")}},{key:"destroy",value:function(){document.body.classList.add("loader--hidden"),document.body.addEventListener("transitionend",(function(t){document.body.classList.remove("loader"),document.body.classList.remove("loader--hidden")}))}}])&&s(e.prototype,n),o&&s(e,o),t}());c.init(),window.addEventListener("load",(function(){(new i).init(),window.setTimeout((function(){c.destroy()}),100)}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,