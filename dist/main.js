!function(e){var t={};function n(s){if(t[s])return t[s].exports;var i=t[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(s,i,function(t){return e[t]}.bind(null,i));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){n(2),e.exports=n(1)},function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/styles/app.min.css"},function(e,t,n){"use strict";function s(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}n.r(t);var i=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.steps={},this.sunsetAngle=15,this.nightAngle=0,this.sunriseAngle=-15}var t,n,i;return t=e,(n=[{key:"init",value:function(e){this.steps=e}},{key:"rotateWheel",value:function(e){console.log(window.screen),e>=this.steps.sunriseStep?window.screen.availWidth>=1024?document.documentElement.style.setProperty("--wheel-rotation",this.sunriseAngle+90+"deg"):document.documentElement.style.setProperty("--wheel-rotation",this.sunriseAngle+"deg"):e>=this.steps.sunsetStep?(window.screen.availWidth>=1024?document.documentElement.style.setProperty("--wheel-rotation",this.nightAngle+90+"deg"):document.documentElement.style.setProperty("--wheel-rotation",this.nightAngle+"deg"),console.log("night")):(window.screen.availWidth>=1024?document.documentElement.style.setProperty("--wheel-rotation",this.sunsetAngle+90+"deg"):document.documentElement.style.setProperty("--wheel-rotation",this.sunsetAngle+"deg"),console.log("sunset"))}},{key:"nightRotation",value:function(){window.screen.availWidth>=1024?document.documentElement.style.setProperty("--wheel-rotation",this.nightAngle+90+"deg"):document.documentElement.style.setProperty("--wheel-rotation",this.nightAngle+"deg")}},{key:"sunsetRotation",value:function(){window.screen.availWidth>=1024?document.documentElement.style.setProperty("--wheel-rotation",this.sunsetAngle+90+"deg"):document.documentElement.style.setProperty("--wheel-rotation",this.sunsetAngle+"deg")}},{key:"sunriseRotation",value:function(){window.screen.availWidth>=1024?document.documentElement.style.setProperty("--wheel-rotation",this.sunriseAngle+90+"deg"):document.documentElement.style.setProperty("--wheel-rotation",this.sunriseAngle+"deg")}}])&&s(t.prototype,n),i&&s(t,i),e}();function o(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.lat="50.8466",this.lng="4.3528",this.apiURL="https://api.sunrise-sunset.org/json?lat="+this.lat+"&lng="+this.lng+"&formatted=0",this.containerHTML=document.querySelector(".js-background"),this.onePartHeight=document.body.clientHeight/24,this.sunsetHours=19,this.sunriseHours=4,this.sunsetStep=this.sunsetHours*this.onePartHeight,this.sunriseStep=this.sunriseHours*this.onePartHeight,this.cycleWheel=t}var t,n,s;return t=e,(n=[{key:"init",value:function(){this.setLatLng(),this.setResizeEventListener();var e=this;fetch(this.apiURL).then((function(e){return e.json()})).then((function(t){console.log(t);var n=t.results.sunrise;e.sunriseHours=24-e.getHours(new Date(n));var s=t.results.sunset;e.sunsetHours=24-e.getHours(new Date(s)),e.sunriseStep=e.sunriseHours*e.onePartHeight,e.sunsetStep=e.sunsetHours*e.onePartHeight,e.cycleWheel.init({sunsetStep:e.sunsetStep,sunriseStep:e.sunriseStep}),e.setNightOrDay(window.pageYOffset+window.innerHeight/2),e.cycleWheel.rotateWheel(window.pageYOffset+window.innerHeight/2),console.log(e.sunriseHours,e.sunriseStep,e.sunsetHours,e.sunsetStep),e.setScrollEventListener()})).catch((function(t){console.error("Il y a eu un problÃ¨me lors de l'excecution du Fetch : "+t),e.cycleWheel.init({sunsetStep:e.sunsetStep,sunriseStep:e.sunriseStep}),e.setNightOrDay(window.pageYOffset+window.innerHeight/2),e.cycleWheel.rotateWheel(window.pageYOffset+window.innerHeight/2),e.setScrollEventListener()}))}},{key:"setLatLng",value:function(){var e=this;"geolocation"in navigator&&navigator.geolocation.getCurrentPosition((function(t){e.lat=t.coords.latitude,e.lng=t.coords.longitude}))}},{key:"setNightOrDay",value:function(e){e>=this.sunriseStep?(console.log("day"),this.containerHTML.classList.add("js-sunrise"),document.documentElement.style.setProperty("--color-text","#2B2B2B"),this.cycleWheel.sunriseRotation(),this.containerHTML.classList.remove("js-night")):e>=this.sunsetStep?(console.log("night"),this.containerHTML.classList.add("js-night"),document.documentElement.style.setProperty("--color-text","#F7F7F7"),this.cycleWheel.nightRotation(),this.containerHTML.classList.remove("js-sunset"),this.containerHTML.classList.remove("js-sunrise")):(console.log("day"),this.containerHTML.classList.add("js-sunset"),document.documentElement.style.setProperty("--color-text","#2B2B2B"),this.cycleWheel.sunsetRotation(),this.containerHTML.classList.remove("js-night"))}},{key:"setResizeEventListener",value:function(){var e=this;window.addEventListener("resize",(function(t){setTimeout(e.resizeFunction(),250)}))}},{key:"setScrollEventListener",value:function(){var e=this;window.addEventListener("scroll",(function(t){e.setNightOrDay(window.pageYOffset+window.innerHeight/2)}))}},{key:"resizeFunction",value:function(){this.onePartHeight=document.body.clientHeight/24,this.sunriseStep=this.sunriseHours*this.onePartHeight,this.sunsetStep=this.sunsetHours*this.onePartHeight}},{key:"getHours",value:function(e){var t=e.getUTCHours();return e.getUTCMinutes()>=40?t+1:t}}])&&o(t.prototype,n),s&&o(t,s),e}())(new i).init()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,