!function(t){var e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(o,i,function(e){return t[e]}.bind(null,i));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){n(2),t.exports=n(1)},function(t,e,n){"use strict";n.r(e),e.default=n.p+"assets/styles/app.min.css"},function(t,e,n){"use strict";function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}n.r(e);var s=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;o(this,t),this.posY=window.scrollY,this.frame,this.activeSection=0,this.oldSection=0,this.black="#2B2B2B",this.blackAlpha="#2B2B2B85",this.white="#F7F7F7",this.contentElements=document.querySelectorAll(".frame-content"),this.contentSections=document.querySelectorAll(".frame-section");var i=0;this.contentElements.forEach((function(t){i+=t.clientHeight,console.log(t.clientHeight)})),this.startY=e.offsetTop,this.endY=n?n.offsetHeight:e.offsetTop+e.offsetHeight-i}var e,n,s;return e=t,(n=[{key:"init",value:function(){this.contentElements.forEach((function(t){t.classList.add("frame-content--hidden")})),this.frame=this.createHTMLNodeFrame(),this.endY-=this.frame.offsetHeight,this.frame.style.top=this.startY+"px",console.log(this.startY,this.endY),window.addEventListener("scroll",function(){var t=this;this.setPosY(window.scrollY),this.posY>=this.startY&&this.posY<=this.endY?(console.log(window.scrollY,this.startY,this.endY),this.frame.classList.add("frame--fixed"),document.documentElement.style.setProperty("--frame-bg",this.blackAlpha),document.documentElement.style.setProperty("--color-text",this.white),this.contentSections.forEach((function(e,n){t.posY>=e.offsetTop&&t.posY<=e.offsetTop+e.offsetHeight&&(t.activeSection=n)})),this.activeSection<this.contentElements.length&&(this.oldSection!==this.activeSection&&(this.contentElements[this.oldSection].classList.remove("frame-content--active"),this.oldSection=this.activeSection),this.contentElements[this.activeSection].classList.add("frame-content--active"))):(console.log("coucou"),this.posY>this.endY?this.frame.style.top=this.endY+"px":this.frame.style.top=this.startY+"px",this.contentElements[this.oldSection].classList.remove("frame-content--active"),this.frame.classList.remove("frame--fixed"),document.documentElement.style.setProperty("--frame-bg","transparent"),document.documentElement.style.setProperty("--color-text",this.black))}.bind(this))}},{key:"setPosY",value:function(t){this.posY=t}},{key:"createHTMLNodeFrame",value:function(){var t=document.createElement("div");t.classList.add("frame");var e=document.createElement("div");return e.classList.add("frame__bg"),t.appendChild(e),t.innerHTML+='<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 393 680" class="svg-responsive frame__svg">\n        <g fill="none" fill-rule="evenodd" transform="translate(0 1)"><path fill="#2B2B2B" d="M353 0c22.09139 0 40 17.90861 40 40v598c0 22.09139-17.90861 40-40 40H40c-22.09139 0-40-17.90861-40-40V40C0 17.90861 17.90861 0 40 0h313zm-13 18H54c-22.09139 0-40 17.90861-40 40v550c0 22.09139 17.90861 40 40 40h286c22.09139 0 40-17.90861 40-40V58c0-22.09139-17.90861-40-40-40z"/><path fill="#F7F7F7" fill-opacity=".25" d="M14 608c0 22.09139 17.90861 40 40 40h286c22.09139 0 40-17.90861 40-40v12c0 22.09139-17.90861 40-40 40H54c-22.09139 0-40-17.90861-40-40z"/><rect width="366" height="630" x="14" y="18" stroke="#000" stroke-width="3" rx="40"/></g>\n    </svg>',document.querySelector("main").appendChild(t),t}}])&&i(e.prototype,n),s&&i(e,s),t}();window.addEventListener("load",(function(t){var e=document.querySelector(".experience");new s(e).init()}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,